dgemm.t:92:             anon (dgemm.t:92) = terra($A : &double,$B : &double,$C : &double,$lda : int32,$ldb : int32,$ldc : int32,$alpha : double) : {}
dgemm.t:93:                 for $mn : int32 = 0,48,3 do
dgemm.t:94:                     for $nn : int32 = 0,48,2 * 4 do
dgemm.t:52:                         var $c00 : vector(double,4) = [vector(double,4)]($alpha) * vecload($C, ($mn + 0) * $ldc + $nn + 0 * 4)
                                    var $c01 : vector(double,4) = [vector(double,4)]($alpha) * vecload($C, ($mn + 0) * $ldc + $nn + 1 * 4)
                                    var $c10 : vector(double,4) = [vector(double,4)]($alpha) * vecload($C, ($mn + 1) * $ldc + $nn + 0 * 4)
                                    var $c11 : vector(double,4) = [vector(double,4)]($alpha) * vecload($C, ($mn + 1) * $ldc + $nn + 1 * 4)
                                    var $c20 : vector(double,4) = [vector(double,4)]($alpha) * vecload($C, ($mn + 2) * $ldc + $nn + 0 * 4)
                                    var $c21 : vector(double,4) = [vector(double,4)]($alpha) * vecload($C, ($mn + 2) * $ldc + $nn + 1 * 4)
dgemm.t:96:                         for $kk : int32 = 0,48,4 do
dgemm.t:65:                             var $a00 : vector(double,4) = vecload($A, ($mn + 0) * $lda + $kk + 0)
                                        var $a01 : vector(double,4) = vecload($A, ($mn + 1) * $lda + $kk + 0)
                                        var $a02 : vector(double,4) = vecload($A, ($mn + 2) * $lda + $kk + 0)
dgemm.t:73:                             var $b00 : vector(double,4) = vecload($B, ($kk + 0) * $ldb + $nn + 0 * 4)
                                        var $b01 : vector(double,4) = vecload($B, ($kk + 0) * $ldb + $nn + 1 * 4)
dgemm.t:80:                             $c00 = $c00 + [vector(double,4)]($a00[0]) * $b00
                                        $c01 = $c01 + [vector(double,4)]($a00[0]) * $b01
                                        $c10 = $c10 + [vector(double,4)]($a01[0]) * $b00
                                        $c11 = $c11 + [vector(double,4)]($a01[0]) * $b01
                                        $c20 = $c20 + [vector(double,4)]($a02[0]) * $b00
                                        $c21 = $c21 + [vector(double,4)]($a02[0]) * $b01
dgemm.t:73:                             var $b10 : vector(double,4) = vecload($B, ($kk + 1) * $ldb + $nn + 0 * 4)
                                        var $b11 : vector(double,4) = vecload($B, ($kk + 1) * $ldb + $nn + 1 * 4)
dgemm.t:80:                             $c00 = $c00 + [vector(double,4)]($a00[1]) * $b10
                                        $c01 = $c01 + [vector(double,4)]($a00[1]) * $b11
                                        $c10 = $c10 + [vector(double,4)]($a01[1]) * $b10
                                        $c11 = $c11 + [vector(double,4)]($a01[1]) * $b11
                                        $c20 = $c20 + [vector(double,4)]($a02[1]) * $b10
                                        $c21 = $c21 + [vector(double,4)]($a02[1]) * $b11
dgemm.t:73:                             var $b20 : vector(double,4) = vecload($B, ($kk + 2) * $ldb + $nn + 0 * 4)
                                        var $b21 : vector(double,4) = vecload($B, ($kk + 2) * $ldb + $nn + 1 * 4)
dgemm.t:80:                             $c00 = $c00 + [vector(double,4)]($a00[2]) * $b20
                                        $c01 = $c01 + [vector(double,4)]($a00[2]) * $b21
                                        $c10 = $c10 + [vector(double,4)]($a01[2]) * $b20
                                        $c11 = $c11 + [vector(double,4)]($a01[2]) * $b21
                                        $c20 = $c20 + [vector(double,4)]($a02[2]) * $b20
                                        $c21 = $c21 + [vector(double,4)]($a02[2]) * $b21
dgemm.t:73:                             var $b30 : vector(double,4) = vecload($B, ($kk + 3) * $ldb + $nn + 0 * 4)
                                        var $b31 : vector(double,4) = vecload($B, ($kk + 3) * $ldb + $nn + 1 * 4)
dgemm.t:80:                             $c00 = $c00 + [vector(double,4)]($a00[3]) * $b30
                                        $c01 = $c01 + [vector(double,4)]($a00[3]) * $b31
                                        $c10 = $c10 + [vector(double,4)]($a01[3]) * $b30
                                        $c11 = $c11 + [vector(double,4)]($a01[3]) * $b31
                                        $c20 = $c20 + [vector(double,4)]($a02[3]) * $b30
                                        $c21 = $c21 + [vector(double,4)]($a02[3]) * $b31
dgemm.t:96:                         end
dgemm.t:55:                         r0x07abbba8 = vecstore($C, ($mn + 0) * $ldc + $nn + 0 * 4, $c00)
                                    r0x07aed8e0 = vecstore($C, ($mn + 0) * $ldc + $nn + 1 * 4, $c01)
                                    r0x07abff98 = vecstore($C, ($mn + 1) * $ldc + $nn + 0 * 4, $c10)
                                    r0x07b054f8 = vecstore($C, ($mn + 1) * $ldc + $nn + 1 * 4, $c11)
                                    r0x07b10e60 = vecstore($C, ($mn + 2) * $ldc + $nn + 0 * 4, $c20)
                                    r0x07b28f90 = vecstore($C, ($mn + 2) * $ldc + $nn + 1 * 4, $c21)
dgemm.t:94:                     end
dgemm.t:93:                 end
dgemm.t:92:             end
dgemm.t:112: Errors reported during specialization.
dgemm.t:123: variable 'l1matmul' not found
								l1matmul(A + m*lda + k,
								       ^

stack traceback:
	[C]: in function 'error'
	src/terralib.lua:481: in function 'finishandabortiferrors'
	src/terralib.lua:2152: in function 'specialize'
	src/terralib.lua:975: in function 'newfunctiondefinition'
	src/terralib.lua:1105: in function 'defineobjects'
	dgemm.t:112: in main chunk
